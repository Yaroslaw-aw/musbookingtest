// <auto-generated />
using System;
using MUSbooking.Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MUSbooking.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240528045029_AddQuantityToOrderEquipments")]
    partial class AddQuantityToOrderEquipments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MUSbooking.Database.Models.Connections.OrderEquipments", b =>
                {
                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("EquipmentId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderEquipments");
                });

            modelBuilder.Entity("MUSbooking.Database.Models.Equipment", b =>
                {
                    b.Property<Guid>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("EquipmentId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("equipments", (string)null);
                });

            modelBuilder.Entity("MUSbooking.Database.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("OrderId");

                    b.ToTable("orders", (string)null);
                });

            modelBuilder.Entity("MUSbooking.Database.Models.Connections.OrderEquipments", b =>
                {
                    b.HasOne("MUSbooking.Database.Models.Equipment", "Equipment")
                        .WithMany("OrderEquipments")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUSbooking.Database.Models.Order", "Order")
                        .WithMany("OrderEquipments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("MUSbooking.Database.Models.Equipment", b =>
                {
                    b.Navigation("OrderEquipments");
                });

            modelBuilder.Entity("MUSbooking.Database.Models.Order", b =>
                {
                    b.Navigation("OrderEquipments");
                });
#pragma warning restore 612, 618
        }
    }
}
